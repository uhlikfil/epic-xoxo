# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from user_svc.models.base_model_ import Model
from user_svc import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, username: str=None, email: str=None, password_hash: str=None, created: int=None, last_updated: int=None):  # noqa: E501
        """User - a model defined in Swagger

        :param username: The username of this User.  # noqa: E501
        :type username: str
        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param password_hash: The password_hash of this User.  # noqa: E501
        :type password_hash: str
        :param created: The created of this User.  # noqa: E501
        :type created: int
        :param last_updated: The last_updated of this User.  # noqa: E501
        :type last_updated: int
        """
        self.swagger_types = {
            'username': str,
            'email': str,
            'password_hash': str,
            'created': int,
            'last_updated': int
        }

        self.attribute_map = {
            'username': 'username',
            'email': 'email',
            'password_hash': 'password_hash',
            'created': 'created',
            'last_updated': 'last_updated'
        }
        self._username = username
        self._email = email
        self._password_hash = password_hash
        self._created = created
        self._last_updated = last_updated

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username

    @property
    def email(self) -> str:
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def password_hash(self) -> str:
        """Gets the password_hash of this User.


        :return: The password_hash of this User.
        :rtype: str
        """
        return self._password_hash

    @password_hash.setter
    def password_hash(self, password_hash: str):
        """Sets the password_hash of this User.


        :param password_hash: The password_hash of this User.
        :type password_hash: str
        """

        self._password_hash = password_hash

    @property
    def created(self) -> int:
        """Gets the created of this User.


        :return: The created of this User.
        :rtype: int
        """
        return self._created

    @created.setter
    def created(self, created: int):
        """Sets the created of this User.


        :param created: The created of this User.
        :type created: int
        """

        self._created = created

    @property
    def last_updated(self) -> int:
        """Gets the last_updated of this User.


        :return: The last_updated of this User.
        :rtype: int
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated: int):
        """Sets the last_updated of this User.


        :param last_updated: The last_updated of this User.
        :type last_updated: int
        """

        self._last_updated = last_updated
