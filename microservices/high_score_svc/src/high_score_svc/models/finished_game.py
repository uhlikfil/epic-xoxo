# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from high_score_svc.models.base_model_ import Model
from high_score_svc import util


class FinishedGame(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, player1: str=None, player2: str=None, p1winner: bool=None, completed: bool=None):  # noqa: E501
        """FinishedGame - a model defined in Swagger

        :param player1: The player1 of this FinishedGame.  # noqa: E501
        :type player1: str
        :param player2: The player2 of this FinishedGame.  # noqa: E501
        :type player2: str
        :param p1winner: The p1winner of this FinishedGame.  # noqa: E501
        :type p1winner: bool
        :param completed: The completed of this FinishedGame.  # noqa: E501
        :type completed: bool
        """
        self.swagger_types = {
            'player1': str,
            'player2': str,
            'p1winner': bool,
            'completed': bool
        }

        self.attribute_map = {
            'player1': 'player1',
            'player2': 'player2',
            'p1winner': 'p1winner',
            'completed': 'completed'
        }
        self._player1 = player1
        self._player2 = player2
        self._p1winner = p1winner
        self._completed = completed

    @classmethod
    def from_dict(cls, dikt) -> 'FinishedGame':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FinishedGame of this FinishedGame.  # noqa: E501
        :rtype: FinishedGame
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player1(self) -> str:
        """Gets the player1 of this FinishedGame.


        :return: The player1 of this FinishedGame.
        :rtype: str
        """
        return self._player1

    @player1.setter
    def player1(self, player1: str):
        """Sets the player1 of this FinishedGame.


        :param player1: The player1 of this FinishedGame.
        :type player1: str
        """

        self._player1 = player1

    @property
    def player2(self) -> str:
        """Gets the player2 of this FinishedGame.


        :return: The player2 of this FinishedGame.
        :rtype: str
        """
        return self._player2

    @player2.setter
    def player2(self, player2: str):
        """Sets the player2 of this FinishedGame.


        :param player2: The player2 of this FinishedGame.
        :type player2: str
        """

        self._player2 = player2

    @property
    def p1winner(self) -> bool:
        """Gets the p1winner of this FinishedGame.

        true if player1 won, false if player2 won  # noqa: E501

        :return: The p1winner of this FinishedGame.
        :rtype: bool
        """
        return self._p1winner

    @p1winner.setter
    def p1winner(self, p1winner: bool):
        """Sets the p1winner of this FinishedGame.

        true if player1 won, false if player2 won  # noqa: E501

        :param p1winner: The p1winner of this FinishedGame.
        :type p1winner: bool
        """

        self._p1winner = p1winner

    @property
    def completed(self) -> bool:
        """Gets the completed of this FinishedGame.


        :return: The completed of this FinishedGame.
        :rtype: bool
        """
        return self._completed

    @completed.setter
    def completed(self, completed: bool):
        """Sets the completed of this FinishedGame.


        :param completed: The completed of this FinishedGame.
        :type completed: bool
        """

        self._completed = completed
