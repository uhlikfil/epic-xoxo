# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from high_score_svc.models.base_model_ import Model
from high_score_svc import util


class Body(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, game_result: str = None):  # noqa: E501
        """Body - a model defined in Swagger

        :param game_result: The game_result of this Body.  # noqa: E501
        :type game_result: str
        """
        self.swagger_types = {"game_result": str}

        self.attribute_map = {"game_result": "game_result"}
        self._game_result = game_result

    @classmethod
    def from_dict(cls, dikt) -> "Body":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body of this Body.  # noqa: E501
        :rtype: Body
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_result(self) -> str:
        """Gets the game_result of this Body.


        :return: The game_result of this Body.
        :rtype: str
        """
        return self._game_result

    @game_result.setter
    def game_result(self, game_result: str):
        """Sets the game_result of this Body.


        :param game_result: The game_result of this Body.
        :type game_result: str
        """
        allowed_values = ["won", "lost", "ragequit"]  # noqa: E501
        if game_result not in allowed_values:
            raise ValueError(
                "Invalid value for `game_result` ({0}), must be one of {1}".format(
                    game_result, allowed_values
                )
            )

        self._game_result = game_result
