openapi: 3.0.1
info:
  title: High Score
  description: Microservice API for High Score
  version: 1.0-oas3
servers:
- url: http://localhost:8003/api/v1
paths:
  /high_score:
    get:
      tags:
      - high_score
      summary: Get the top 10 users
      operationId: get_high_score_top
      responses:
        "200":
          description: Top 10 users returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighScoreArray'
      x-openapi-router-controller: high_score_svc.controllers.high_score_controller
  /high_score/{username}:
    get:
      tags:
      - high_score
      summary: Get the ranking of the desired user
      operationId: get_user_high_score
      parameters:
      - name: username
        in: path
        description: The username that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Top 10 users returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighScore'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Invalid username supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: high_score_svc.controllers.high_score_controller
components:
  schemas:
    HighScore:
      type: object
      properties:
        username:
          type: string
        wins:
          type: integer
        loses:
          type: integer
        ragequits:
          type: integer
        winrate:
          type: number
          readOnly: true
        rank:
          type: integer
          readOnly: true
      description: high score object
      example:
        wins: 0
        ragequits: 1
        loses: 6
        winrate: 5.962133916683182
        rank: 5
        username: username
    HighScoreArray:
      type: object
      properties:
        high_scores:
          type: array
          items:
            $ref: '#/components/schemas/HighScore'
      description: array of high scores
      example:
        high_scores:
        - wins: 0
          ragequits: 1
          loses: 6
          winrate: 5.962133916683182
          rank: 5
          username: username
        - wins: 0
          ragequits: 1
          loses: 6
          winrate: 5.962133916683182
          rank: 5
          username: username
    FinishedGame:
      type: object
      properties:
        player1:
          type: string
        player2:
          type: string
        p1winner:
          type: boolean
          description: "true if player1 won, false if player2 won"
        completed:
          type: boolean
      description: after game RabbitMQ entry for the High Score service to process
    Error:
      type: object
      properties:
        detail:
          type: string
        status:
          type: integer
        title:
          type: string
        type:
          type: string
      description: Error response
    FinishedGameHighScore:
      type: object
      properties:
        player1:
          type: string
        player2:
          type: string
        p1winner:
          type: boolean
          description: "true if player1 won, false if player2 won"
        completed:
          type: boolean
      description: after game RabbitMQ entry for the High Score service to process

