swagger: '2.0'
info:
  version: '1.0'
  title: Users
  description: Microservice API for user management
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      operationId: "create_user"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "User created and is returned"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid user supplied"
        "409":
          description: "User already exists"
  /user/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by username"
      operationId: "get_user_by_username"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The username that needs to be fetched"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
    put:
      tags:
      - "user"
      summary: "Update user"
      operationId: "update_user"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "user that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "User updated successfully"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      operationId: "delete_user"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The user that needs to be deleted"
        required: true
        type: "string"
      responses:
        "204":
          description: "User deleted successfully"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
definitions:
  User:
    description: user object
    type: "object"
    properties:
      id:
        type: "integer"
      email:
        type: "string"
      password_hash:
        type: "string"
      username:
        type: "string"
      verified:
        type: "boolean"
    xml:
      name: "User"